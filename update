#!/usr/bin/perl -w

use strict;

mkdir "tracks/pending";
mkdir "tracks/current";

sub merge {
	my ($pending, $current) = @_;
	my $now = time();

	system "./datamaps/merge -u -o $current-$now $current $pending";
	if (($? >> 8) == 0) {
		rename($current, "$current-old-$now");
		# XXX momentary race
		rename("$current-$now", $current);

		my $f;
		for $f (<$pending/*>) {
			unlink $f;
		}
		rmdir $pending;

		for $f (<$current-old-$now/*>) {
			unlink $f;
		}
		rmdir "$current-old-$now";
	} else {
		print STDERR "error $?\n";
	}
}

while (1) {
	my $max = 0;
	my $now = time();

	open(IN, "curl -q -m 120 http://www.openstreetmap.org/traces/rss |");
	while (<IN>) {
		if (/<link>(http:\/\/www.openstreetmap.org\/user\/(.*)\/traces\/(.*))<\/link>/) {
			my $track = $3;

			if ($track > $max) {
				$max = $track + 0;
			}
		}
	}
	close(IN);

	for (my $i = $max; $i > 1577234; $i--) {
		last if time() >= $now + 120;

		my $dir = int($i / 10000);
		next if -f "tracks/pending/$i.gpx";
		next if -f "tracks/current/$dir/$i.gpx.gz";

		print "$i\n";

		open (IN, "curl -q -m 120 --compress http://www.openstreetmap.org/trace/$i/data |");
		open(OUT, ">tracks/pending/$i.gpx");
		while (<IN>) {
			print OUT;
		}
		close(OUT);
		close(IN);
	}

	my @pending = <tracks/pending/*.gpx>;

	if ($#pending >= 0) {
		open(OUT, "| ./datamaps/encode -z20 -o shapes/pending-$now");

		for my $f (@pending) {
			open(IN, "./gpx-import/src/gpx-parse $f |");
			while (<IN>) {
				print OUT;
			}
			close(IN);
		}
		close(OUT);

		merge("shapes/pending-$now", "shapes/current");

		for my $f (@pending) {
			my $i = $f;
			$i =~ s/.*\///;
			$i =~ s/\.gpx//;
			my $dir = int($i / 10000);

			mkdir "tracks/current/$dir";

			my $f2 = $f;
			$f2 =~ s/pending/current\/$dir/;

			rename($f, $f2);
			system "gzip -9 $f2";
		}
	}

	sleep(60);
}
